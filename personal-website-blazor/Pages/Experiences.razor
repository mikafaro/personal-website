@page "/experience"

@using PersonalWebsiteBlazor.Models

<div class="flex flex-col max-w-5xl mx-auto my-4">

    <Title>Education</Title>

    @foreach (var EducationEntry in Education)
    {
        <ExperienceCard Experience="EducationEntry" />
    }

</div>

<div class="flex flex-col max-w-5xl mx-auto my-8">

    <Title>Software Engineering Experience</Title>

    @foreach (var EmploymentEntry in Employment)
    {
        <ExperienceCard Experience="EmploymentEntry" />
    }

</div>

@code {
    List<Experience> Education = new List<Experience>
    {
        new Experience
        {
            ExperienceTitle = "Bachelor of Science in Computer Technology",
            Type = ExperienceType.Degree,
            Affiliations = ["University of Bergen"],
            FromDate = new DateOnly(2019, 08, 12),
            ToDate = new DateOnly(2024, 06, 01),
            Keywords = ["Programming Fundamentals", "Software Development",
                         "Software Security", "Computer Networks", "Mathematics"],
            Highlights = [@"A degree that gave me a thorough understanding of the fundamentals
                            of computer science. The programme consisted of topics like OOP,
                            functional programming, databases, software security, software development methodologies,
                            basic DSA, and much more.",
                          @"As elective courses I explored different topics like Computer Security,
                            Data Analysis, Category Theory and Computer Networks, in order to discover
                            my circle of interest and competence."],
            Image = "images/realfagbygget-golden.JPEG",
            LinkURL = "https://www4.uib.no/studier/program/informatikk-datateknologi-bachelor"
        },
        new Experience
        {
            ExperienceTitle = "Master of Science in Software Engineering",
            Type = ExperienceType.Degree,
            Affiliations = ["University of Bergen", "Western Norway University of Applied Sciences", "CERN"],
            FromDate = new DateOnly(2024,08,18),
            Keywords = ["Advanced Software Technologies", "Modern Software Development Methods", "Grid and Cloud Computing"],
            Highlights = [@"In this joint master I go deeper into learning about the technologies and processes involved
                            in creating and integrating different parts of full-stack applications.",
                          @"I took particular interest in a cloud and grid computing course which lead
                            into my choice of master project.",
                          @"Planning to work closely with the ALICE collaboration at CERN to develop and optimize
                            their grid computing system, the Java ALICE Environment (JAliEn)."],
            Image = "images/hvl-golden.JPEG",
            LinkURL = "https://www4.uib.no/en/studies/programmes/joint-masters-in-software-engineering-masters"
        }
    };

    List<Experience> Employment = new List<Experience>
    {
        new Experience
        {
            ExperienceTitle = "Teaching Assistant in Functional Programming",
            Type = ExperienceType.PartTimeEmployment,
            Affiliations = ["University of Bergen"],
            FromDate = new DateOnly(2023,08,01),
            ToDate = new DateOnly(2023,12,01),
            Keywords = ["Functional Programming", "Haskell", "Teaching"],
            Highlights = [@"Throughout one semester during my bachelor I was involved with a course in functional programming
                            by assisting students with their weekly assignments and clarifying functional programming fundamentals.",
                          @"This part time position gave me some experience in communicating about problems and
                            how to deal with finding solutions. In particular in terms of how to think about
                            writing in a functional style."],
            Image = "images/realfagbygget-golden.JPEG",
        }
    };

    protected override void OnInitialized()
    {
        Education = Education.OrderByDescending(E => E.FromDate).ToList();
        Employment = Employment.OrderByDescending(E => E.FromDate).ToList();
    }
}