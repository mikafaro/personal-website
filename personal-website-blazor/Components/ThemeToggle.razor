@inject ThemeService Theme
@implements IDisposable

<div class="flex space-x-1 items-center">
    <button class="flex items-center justify-center cursor-pointer p-1 rounded-md
                   h-8 w-8 @SunBg" @onclick="LightToggle">
        <Icon Name="Sun" CssClass="h-5 w-5 text-arcticblue-deep dark:text-darkarcticblue-light" />
    </button>
    <button class="flex items-center justify-center cursor-pointer p-1 rounded-md
                   h-8 w-8 @MoonBg" @onclick="DarkToggle">
        <Icon Name="Moon" CssClass="h-5 w-5 text-arcticblue-deep dark:text-darkarcticblue-light" />
    </button>
</div>

@code {
    private async Task LightToggle()
    {
        await Theme.LightToggle();
    }

    private async Task DarkToggle()
    {
        await Theme.DarkToggle();
    }

    protected override async Task OnInitializedAsync()
    {
        Theme.OnChange += ThemeStateHasChanged;
        await Theme.InitializeAsync();
    }

    public void Dispose()
    {
        Theme.OnChange -= ThemeStateHasChanged;
    }

    private void ThemeStateHasChanged()
    {
        StateHasChanged();
    }

    private string ButtonBgClass = "bg-arcticaurora-deep/50 dark:bg-darkarcticaurora-deep/50";

    private string SunBg
    {
        get
        {
            return Theme.IsDarkMode() ? "" : ButtonBgClass;
        }
    }

    private string MoonBg
    {
        get
        {
            return Theme.IsDarkMode() ? ButtonBgClass : "";
        }
    }

}
